<project name="myinvoiz" default="build">
    <property file="build.properties"/>
    <property name="exclude_lib"
              value="${baseDir}/source/vendor"/>
    <target name="build" depends="clean,prepare,phpunit"/>
    <!-- remove all old directories -->
    <target name="clean">
        <delete dir="${baseDir}/build"/>
        <delete dir="${baseDir}/release"/>
        <delete dir="${baseDir}/codebrowser"/>
        <delete dir="${baseDir}/web"/>
        <delete dir="${baseDir}/docs"/>
        <delete dir="${baseDir}/source/vendor"/>
        <delete file="${baseDir}/source/composer.lock"/>
    </target>

    <!-- create the used directories -->
    <target name="prepare">
        <mkdir dir="${baseDir}/build/logs"/>
        <mkdir dir="${baseDir}/docs"/>
        <mkdir dir="${baseDir}/release"/>
        <mkdir dir="${baseDir}/codebrowser"/>
        <mkdir dir="${baseDir}/web"/>
        <mkdir dir="${baseDir}/source/vendor"/>
    </target>
    <!-- create phpDoc -->
    <target name="doc-blox">
        <exec executable="docblox" dir="${sourceDir}" logerror="on">
            <arg line="run -d  ${sourceDir} -t ${baseDir}/docs "/>
        </exec>
    </target>

    <!-- detects the copy and paste parts -->
    <target name="phpcpd" depends="prepare">
        <exec dir="${baseDir}" executable="phpcpd" failonerror="false">
            <arg line="--log-pmd build/logs/cpd.xml ${sourceDir}"/>
            <arg line="--exclude ${exclude_lib}"/>
        </exec>
    </target>

    <!-- pdepend uses some metrics -->
    <target name="pdepend" depends="prepare">
        <exec dir="${baseDir}" executable="pdepend" failonerror="true">
            <arg line="--jdepend-xml=build/logs/jdepend.xml ${sourceDir}"/>
        </exec>
    </target>

    <!-- codesniffer checks the sourceDir for some coding style violations -->
    <target name="phpcs" depends="prepare">
        <exec dir="${sourceDir}" executable="phpcs" output="${baseDir}/build/logs/checkstyle.xml"
              failonerror="false">
            <arg line="--extensions=php
            		--standard=ruleset.xml
                    --report=checkstyle ${sourceDir}
                    --ignore=${exclude_lib}"
            />
        </exec>
    </target>
    <!-- unittesting - creates 2 log files a test log and a coverage log -->
    <target name="phpunit">
        <exec dir="${sourceDir}" executable="phpunit" failonerror="true">
            <arg line=" --log-junit ${baseDir}/build/logs/junit.xml
            			--debug
            			--configuration ${sourceDir}/phpunit.xml.dist
            			"/>
        </exec>
    </target>
    <target name="phpmd">
        <exec dir="${sourceDir}" executable="phpmd" failonerror="false">
            <arg line=". xml codesize
				--reportfile ${baseDir}/build/logs/pmd.xml
                --exclude ${exclude_lib}"
                    />
        </exec>
    </target>
    <target name="composer">
         <exec dir="${sourceDir}" executable="wget">
             <arg line="http://getcomposer.org/installer" />
         </exec>
    </target>
    <target name="composer-install">
        <exec dir="${sourceDir}" executable="php">
            <arg line="composer.phar install"
                 />
        </exec>
    </target>
    <!--
         the codebrowser builds a nice view from the xml log files and creates
         some html files
     -->
    <target name="phpcb">
        <exec dir="${baseDir}" executable="phpcb" failonerror="false">
            <arg line="--log build/logs --source ${sourceDir} --output codebrowser"/>
        </exec>
    </target>
    <!--
         builds a release - a zip file with the important sourceDirs, without
         tests
     -->
    <target name="release" depends="prepare">
        <zip destfile="${baseDir}/release/${ant.project.name}.zip">
            <fileset dir="${sourceDir}" excludes="**.svn/**, testing/**"/>
        </zip>
    </target>

    <target name="phploc"
            description="Generate phploc.csv">
        <exec executable="phploc">
            <arg value="--log-csv"/>
            <arg value="${baseDir}/build/logs/phploc.csv"/>
            <arg path="${sourceDir}"/>
        </exec>
    </target>
</project>
